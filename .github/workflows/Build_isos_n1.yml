name: Build_isos_n1

on: 
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译
#  schedule:
#    - cron: 40 18 * * 5

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [n1]
        include:
          - arch: n1

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Free disk space
      uses: xiangfeidexiaohuo/actions@free-disk
      with:
        build-mount-path: /home/runner/work/EasyWrt/EasyWrt

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo -E apt-get update -y
        sudo -E apt-get install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev python3-setuptools g++ file clang nano genisoimage
        pip install aligo
        sudo -E apt-get clean
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h
        
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/istoreos/istoreos
        REPO_BRANCH: istoreos-22.03
      run: |
        git clone https://github.com/xiangfeidexiaohuo/EasyWrt.git && mv ./EasyWrt/* ./  && rm -rf ./EasyWrt
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        cp -f ../diy/op/isos1.sh ./
        chmod +x ./isos1.sh && ./isos1.sh

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a

        ./scripts/feeds install -a

        cp -f ../diy/op/isos2.sh ./        
        chmod +x ./isos2.sh && ./isos2.sh       

        
    - name: Configuration Customization - Build_isos_n1
      env:
        CONFIG_FILE: './configs/ARM/isos_n1.config'
      run: |
        [ -e $CONFIG_FILE ] && cat $CONFIG_FILE >> openwrt/.config

        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        date '+%Y%m%d%H' > version
        make -j$(nproc) V=s

    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./${{ matrix.arch }}_out
        mkdir -p ./${{ matrix.arch }}_out/
        cp -a ./openwrt/.config ./${{ matrix.arch }}_out/isos_${{ matrix.arch }}.config
        
        getmd5()
        {
        md5sum=`md5sum $1`
        md5=`echo ${md5sum% *}`
        md5=`echo ${md5:0:10}`
        }
        
        rom=openwrt/bin/targets/amlogic/armv8/istoreos-*-squashfs.img.gz
        cp -a $rom ${{ matrix.arch }}_out
              
    - name: Upload Firmwares
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.arch }}-isos
        path: ${{ matrix.arch }}_out/istoreos-*.img.gz

    - name: Upload config
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.arch }}-config
        path: ${{ matrix.arch }}_out/isos_*.config
